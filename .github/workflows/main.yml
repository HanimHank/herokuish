---
name: CI

# yamllint disable-line rule:truthy
on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - master
      - 'release'

concurrency:
  group: build-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: build.${{ matrix.make }}
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: true
      matrix:
        make:
          - build/docker/18 STACK_VERSION=18
          - build/docker/20 STACK_VERSION=20
          - build/docker/22 STACK_VERSION=22
          - build build/docker/18 BUILDX=false STACK_VERSION=18
          - build build/docker/20 BUILDX=false STACK_VERSION=20
          - build build/docker/22 BUILDX=false STACK_VERSION=22

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v3
        with:
          go-version: 1.17.8

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6

      - uses: actions/setup-python@v4
        with:
          python-version: '3.7.x'

      - name: setup env
        run: make ci-report

      - name: shellcheck
        run: make shellcheck

      - name: lint
        run: make lint

      - name: install requirements
        run: make deps fpm package_cloud

      - name: set up qemu
        uses: docker/setup-qemu-action@v2

      - name: set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

      - name: build
        run: make ${{ matrix.make }}

      - name: bash tests
        run: |
          if [[ "${{ matrix.make }}" =~ *BUILDX* ]]; then
            basht tests/**/tests.sh
          fi

      - name: upload packages
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build


  unit-tests:
    name: unit.heroku-${{ matrix.heroku }}.${{ matrix.buildpack }}
    needs: build
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        buildpack:
          - buildpack-clojure
          - buildpack-go
          - buildpack-gradle
          - buildpack-java
          - buildpack-multi
          - buildpack-nodejs
          - buildpack-null
          - buildpack-php
          - buildpack-play
          - buildpack-python
          - buildpack-ruby
          - buildpack-scala
          - buildpack-static
        heroku:
          - 18
          - 20
          - 22

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version: 1.17.8

      - name: download packages
        uses: actions/download-artifact@v3
        with:
          name: build

      - name: install requirements
        run: make deps

      - name: build docker images
        run: make build/docker/${{ matrix.heroku }} BUILDX=false STACK_VERSION=${{ matrix.heroku }}

      - name: run buildpack test
        run: |
          echo "executing ${{ matrix.buildpack }} tests"
          basht buildpacks/${{ matrix.buildpack }}/tests/*/test.sh

  release:
    name: release
    needs: unit-tests
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6

      - name: download packages
        uses: actions/download-artifact@v3
        with:
          name: build

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: release
        run: |
          if [[ "${GITHUB_REF#refs/heads/}" == "release" ]]; then
            export CI_BRANCH=${GITHUB_REF#refs/heads/}
            export PACKAGECLOUD_REPOSITORY=dokku/dokku
            make release release-packagecloud
          fi
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
          PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}
